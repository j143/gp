#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

gpr = function(matrix[double] X, matrix[double] y, double noiseLevel)
  return (matrix[double] pred_mean_f, matrix[double] pred_var_f, matrix[double] lmlh) {

  # calcuate covariance matrix
  K = covariance::cov(X);

  # 2.
  L = cholesky( K + noiseLevel * I )

  # 3.
  alpha = solve( t(L), solve(L, y) )

  # 4. predictive mean
  pred_mean_f = t(K_star) %*% alpha

  # 5.
  v = solve(L, K_star)

  # 6.
  pred_var_f = k(x_star, x_star) - t(v) %*% v

  # 7.
  lmlh = - 0.5 * t(y) %*% alpha - sum(diag(L)) - 0.5 * n * log(6.28);

}